#include <iostream>
#include<bits/stdc++.h>
using namespace std;
void print(int** edges,int n,bool*visited,int sv){
    cout<<sv<<endl;
    visited[sv]=true;
    for(int i=0;i<n;i++){
        if(edges[sv][i]==1 && !visited[i]){
            print(edges,n,visited,i);
        }
    }
}
void Dfs(int** edges,int n){
    bool*visited=new bool[n];
    for(int i=0;i<n;i++){
        visited[i]=false;
    }
    for(int i=0;i<n;i++){
    if(visited[i]==false){
    print(edges,n,visited,i);
    }
    }
}
int main()
{
    int n;
    int e;
    cin>>n>>e;
    int**edges=new int*[n];
    for(int i=0;i<n;i++){
        edges[i]=new int[n];
        for(int j=0;j<n;j++){
            edges[i][j]=0;
        }
    }
    for(int i=0;i<e;i++){
        int f;
        int s;
        cin>>f>>s;
        edges[f][s]=1;
        edges[s][f]=1;
    }
    Dfs(edges,n);
    return 0;
}
